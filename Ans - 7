To determine if an array nums is monotonic, we can compare the elements of the array to check if they are either all in non-decreasing (monotone increasing) order or all in non-increasing (monotone decreasing) order.

Here's a step-by-step approach to solve this problem:

Initialize two boolean variables, isIncreasing and isDecreasing, as True.

Iterate over the elements in the nums array starting from index 1.

Check if the current element nums[i] is greater than the previous element nums[i-1].

If nums[i] is greater than nums[i-1], it violates the non-decreasing order, so set isIncreasing to False.

If nums[i] is less than nums[i-1], it violates the non-increasing order, so set isDecreasing to False.

After the loop finishes, check if either isIncreasing or isDecreasing is True. If so, return True to indicate that the array is monotonic.

If both isIncreasing and isDecreasing are False, return False as the array is neither monotone increasing nor monotone decreasing.

Here's the implementation in Python:


def isMonotonic(nums):
    isIncreasing = True
    isDecreasing = True

    for i in range(1, len(nums)):
        if nums[i] > nums[i - 1]:
            isDecreasing = False
        elif nums[i] < nums[i - 1]:
            isIncreasing = False

    return isIncreasing or isDecreasing
Let's test the function with the given example:

Copy code
nums = [1, 2, 2, 3]
result = isMonotonic(nums)
print(result)  # Output: True
The function returns True, which is the correct output for the given example. The nums array is monotonic since all the elements are in non-decreasing order.
